#!/bin/bash

# Mirai Agent - –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ–ª–Ω—ã–π —Å—Ç–µ–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: Prometheus, Grafana, AlertManager

set -e

echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ Mirai Agent..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ERROR:${NC} $1"
}

warning() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] WARNING:${NC} $1"
}

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
cd "$(dirname "$0")"
MONITORING_DIR=$(pwd)

log "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: $MONITORING_DIR"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
if ! command -v docker &> /dev/null; then
    error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
    exit 1
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
log "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p prometheus grafana alertmanager logs data

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π..."
cp prometheus.yml prometheus/
cp alert_rules.yml prometheus/
cp alertmanager.yml alertmanager/

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–æ–≤..."
check_port() {
    if netstat -tuln | grep -q ":$1 "; then
        warning "–ü–æ—Ä—Ç $1 —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è"
        return 1
    fi
    return 0
}

PORTS=(9090 9091 9093 3001 8080 9100)
for port in "${PORTS[@]}"; do
    if ! check_port $port; then
        warning "–ü–æ—Ä—Ç $port –∑–∞–Ω—è—Ç, –≤–æ–∑–º–æ–∂–Ω—ã –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã"
    fi
done

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
docker-compose -f docker-compose.monitoring.yml down --remove-orphans 2>/dev/null || true

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
if [[ "$1" == "--clean" ]]; then
    log "–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤..."
    docker system prune -f
fi

# –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
log "–ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
docker-compose -f docker-compose.monitoring.yml up -d

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
log "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."

wait_for_service() {
    local url=$1
    local name=$2
    local max_attempts=30
    local attempt=1
    
    while [[ $attempt -le $max_attempts ]]; do
        if curl -s "$url" > /dev/null 2>&1; then
            log "‚úÖ $name –≥–æ—Ç–æ–≤"
            return 0
        fi
        echo -n "."
        sleep 2
        ((attempt++))
    done
    
    error "‚ùå $name –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å"
    return 1
}

echo -n "–û–∂–∏–¥–∞–Ω–∏–µ Prometheus"
wait_for_service "http://localhost:9091/api/v1/status/config" "Prometheus"

echo -n "–û–∂–∏–¥–∞–Ω–∏–µ Grafana"
wait_for_service "http://localhost:3001/api/health" "Grafana"

echo -n "–û–∂–∏–¥–∞–Ω–∏–µ AlertManager"
wait_for_service "http://localhost:9093/-/ready" "AlertManager"

# –ó–∞–ø—É—Å–∫ metrics exporter
log "–ó–∞–ø—É—Å–∫ Mirai Metrics Exporter..."
python3 metrics_exporter.py &
METRICS_PID=$!
echo $METRICS_PID > logs/metrics_exporter.pid

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –º–µ—Ç—Ä–∏–∫
sleep 5
if curl -s "http://localhost:9090/metrics" > /dev/null; then
    log "‚úÖ Metrics Exporter –∑–∞–ø—É—â–µ–Ω"
else
    warning "‚ùå Metrics Exporter –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# –ò–º–ø–æ—Ä—Ç –¥–∞—à–±–æ—Ä–¥–æ–≤
log "–ò–º–ø–æ—Ä—Ç –¥–∞—à–±–æ—Ä–¥–æ–≤ –≤ Grafana..."
sleep 10  # –ñ–¥–µ–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ Grafana

import_dashboard() {
    local file=$1
    local name=$2
    
    if [[ -f "$file" ]]; then
        curl -X POST \
            -H "Content-Type: application/json" \
            -u admin:mirai2024! \
            -d @"$file" \
            "http://localhost:3001/api/dashboards/db" 2>/dev/null
        
        if [[ $? -eq 0 ]]; then
            log "‚úÖ –î–∞—à–±–æ—Ä–¥ $name –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω"
        else
            warning "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞—à–±–æ—Ä–¥ $name"
        fi
    fi
}

import_dashboard "grafana_dashboard_trading.json" "Trading Dashboard"
import_dashboard "grafana_dashboard_ai.json" "AI Performance Dashboard"

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
log "–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã..."

echo ""
echo -e "${BLUE}üéØ –°–ò–°–¢–ï–ú–ê –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê –ó–ê–ü–£–©–ï–ù–ê${NC}"
echo ""
echo -e "${GREEN}üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:${NC}"
echo "  ‚Ä¢ Prometheus:   http://localhost:9091"
echo "  ‚Ä¢ Grafana:      http://localhost:3001 (admin/mirai2024!)"
echo "  ‚Ä¢ AlertManager: http://localhost:9093"
echo "  ‚Ä¢ Node Exporter: http://localhost:9100"
echo "  ‚Ä¢ cAdvisor:     http://localhost:8080"
echo ""
echo -e "${GREEN}üìà –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞—à–±–æ—Ä–¥—ã:${NC}"
echo "  ‚Ä¢ Trading Dashboard: P&L, –ø–æ–∑–∏—Ü–∏–∏, —Ç–æ—Ä–≥–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å"
echo "  ‚Ä¢ AI Performance: AI –º–µ—Ç—Ä–∏–∫–∏, –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, uptime"
echo ""
echo -e "${GREEN}üö® –ê–ª–µ—Ä—Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –¥–ª—è:${NC}"
echo "  ‚Ä¢ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ—Å–∞–¥–∫–∞ (>10%)"
echo "  ‚Ä¢ –í—ã—Å–æ–∫–∞—è –ø—Ä–æ—Å–∞–¥–∫–∞ (>5%)"
echo "  ‚Ä¢ –ù–∏–∑–∫–∏–π –≤–∏–Ω—Ä–µ–π—Ç (<45%)"
echo "  ‚Ä¢ –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Ç–æ—Ä–≥–æ–≤–ª–∏ (>2—á)"
echo "  ‚Ä¢ AI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
echo "  ‚Ä¢ –í—ã—Å–æ–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤"
echo ""
echo -e "${YELLOW}üìã –õ–æ–≥–∏:${NC}"
echo "  ‚Ä¢ Metrics Exporter PID: $METRICS_PID (—Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ logs/metrics_exporter.pid)"
echo "  ‚Ä¢ Docker logs: docker-compose -f docker-compose.monitoring.yml logs -f"
echo ""
echo -e "${GREEN}‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!${NC}"

# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å—Ç–∞—Ç—É—Å–∞
cat > logs/monitoring_status.json << EOF
{
  "status": "running",
  "started_at": "$(date -Iseconds)",
  "metrics_exporter_pid": $METRICS_PID,
  "services": {
    "prometheus": "http://localhost:9091",
    "grafana": "http://localhost:3001",
    "alertmanager": "http://localhost:9093",
    "node_exporter": "http://localhost:9100",
    "cadvisor": "http://localhost:8080"
  },
  "credentials": {
    "grafana_user": "admin",
    "grafana_password": "mirai2024!"
  }
}
EOF

log "–°—Ç–∞—Ç—É—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ logs/monitoring_status.json"