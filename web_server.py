#!/usr/bin/env python3
"""
Simple HTTP server for Mirai frontend
–ü—Ä–æ—Å—Ç–æ–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ Mirai
"""

import http.server
import socketserver
import os
import threading
import logging
from pathlib import Path

class MiraiHTTPRequestHandler(http.server.SimpleHTTPRequestHandler):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ HTTP –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è SPA"""
    
    def __init__(self, *args, **kwargs):
        super().__init__(*args, directory="/root/mirai-agent/frontend/trading/dist", **kwargs)
    
    def do_GET(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ GET –∑–∞–ø—Ä–æ—Å–æ–≤"""
        # –î–ª—è SPA –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –º–∞—Ä—à—Ä—É—Ç—ã –Ω–∞ index.html
        path = self.translate_path(self.path)
        if not os.path.exists(path) and not self.path.startswith('/api'):
            self.path = '/index.html'
        
        return super().do_GET()
    
    def log_message(self, format, *args):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤"""
        logging.info(f"Web: {self.address_string()} - {format % args}")

def start_web_server(port=3001, host='0.0.0.0'):
    """–ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞"""
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    logging.basicConfig(
        level=logging.INFO,
        format='%(asctime)s - %(levelname)s - %(message)s',
        handlers=[
            logging.FileHandler('/root/mirai-agent/logs/web_server.log'),
            logging.StreamHandler()
        ]
    )
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º
    frontend_dir = Path("/root/mirai-agent/frontend/trading/dist")
    if not frontend_dir.exists():
        logging.error("–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–±–æ—Ä–∫—É.")
        return
    
    logging.info(f"–ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ {host}:{port}")
    logging.info(f"–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –∏–∑: {frontend_dir}")
    
    try:
        with socketserver.TCPServer((host, port), MiraiHTTPRequestHandler) as httpd:
            logging.info(f"üåê –í–µ–±-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: http://{host}:{port}")
            httpd.serve_forever()
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞: {e}")

if __name__ == "__main__":
    start_web_server()