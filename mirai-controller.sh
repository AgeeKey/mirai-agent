#!/bin/bash

# Mirai Autonomous Controller
# –ì–ª–∞–≤–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã

set -e

echo "ü§ñ Mirai Autonomous Controller v1.0"

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a /root/mirai-agent/logs/controller.log
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
check_autonomous_status() {
    if pgrep -f "mirai_autonomous.py" > /dev/null; then
        log "‚úÖ –ê–≤—Ç–æ–Ω–æ–º–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞"
        return 0
    else
        log "‚ùå –ê–≤—Ç–æ–Ω–æ–º–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞"
        return 1
    fi
}

# –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
start_autonomous() {
    log "üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã..."
    
    if check_autonomous_status; then
        log "‚ÑπÔ∏è –ê–≤—Ç–æ–Ω–æ–º–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞"
        return 0
    fi
    
    # –°–æ–∑–¥–∞–µ–º venv –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if [ ! -d "/root/mirai-agent/venv" ]; then
        python3 -m venv /root/mirai-agent/venv
        source /root/mirai-agent/venv/bin/activate
        pip install psutil requests
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–Ω–æ–º–Ω—É—é —Å–∏—Å—Ç–µ–º—É –≤ —Ñ–æ–Ω–µ
    cd /root/mirai-agent
    source /root/mirai-agent/venv/bin/activate
    nohup python3 mirai_autonomous.py > /root/mirai-agent/logs/autonomous_output.log 2>&1 &
    
    sleep 5
    
    if check_autonomous_status; then
        log "‚úÖ –ê–≤—Ç–æ–Ω–æ–º–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞"
    else
        log "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã"
        return 1
    fi
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
stop_autonomous() {
    log "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã..."
    
    pkill -f "mirai_autonomous.py" || true
    sleep 2
    
    if ! check_autonomous_status; then
        log "‚úÖ –ê–≤—Ç–æ–Ω–æ–º–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
    else
        log "‚ö†Ô∏è –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞..."
        pkill -9 -f "mirai_autonomous.py" || true
    fi
}

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
restart_autonomous() {
    log "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã..."
    stop_autonomous
    sleep 3
    start_autonomous
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ–π —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã
check_ecosystem_status() {
    log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã..."
    
    local status_file="/root/mirai-agent/status/ecosystem_status.json"
    mkdir -p /root/mirai-agent/status
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–∏—Å—ã
    local api_status="down"
    local web_status="down"
    local autonomous_status="down"
    local monitoring_status="down"
    
    # API
    if curl -s http://localhost:8001/health > /dev/null 2>&1; then
        api_status="up"
    fi
    
    # Web
    if curl -s http://localhost:3001 > /dev/null 2>&1; then
        web_status="up"
    fi
    
    # Autonomous
    if check_autonomous_status; then
        autonomous_status="up"
    fi
    
    # Monitoring
    if curl -s http://localhost:9090 > /dev/null 2>&1; then
        monitoring_status="up"
    fi
    
    # –°–æ–∑–¥–∞–µ–º –æ—Ç—á–µ—Ç
    cat > "$status_file" << EOF
{
    "timestamp": "$(date -Iseconds)",
    "services": {
        "api": "$api_status",
        "web": "$web_status",
        "autonomous": "$autonomous_status",
        "monitoring": "$monitoring_status"
    },
    "system": {
        "cpu_usage": "$(top -bn1 | grep "Cpu(s)" | awk '{print $2}' | sed 's/%us,//')",
        "memory_usage": "$(free | awk 'FNR==2{printf "%.1f", $3/($3+$4)*100}')",
        "disk_usage": "$(df / | awk 'NR==2 {print $5}')",
        "uptime": "$(uptime -p)"
    },
    "docker": {
        "containers_running": "$(docker ps | wc -l)",
        "images": "$(docker images | wc -l)"
    }
}
EOF
    
    log "üìä –°—Ç–∞—Ç—É—Å —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã:"
    log "  API: $api_status"
    log "  Web: $web_status"
    log "  Autonomous: $autonomous_status"
    log "  Monitoring: $monitoring_status"
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ–π —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã
init_ecosystem() {
    log "üå± –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã Mirai..."
    
    # –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    mkdir -p /root/mirai-agent/{logs,status,reports,secrets,backups}
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–∞–∑–æ–≤—ã–µ —Å–µ—Ä–≤–∏—Å—ã
    log "üì¶ –ó–∞–ø—É—Å–∫ –±–∞–∑–æ–≤—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # API
    if ! curl -s http://localhost:8001/health > /dev/null 2>&1; then
        cd /root/mirai-agent
        source /root/mirai-agent/venv/bin/activate
        nohup python3 mirai_ecosystem_api.py > /root/mirai-agent/logs/api_output.log 2>&1 &
        sleep 5
        log "üîó API –∑–∞–ø—É—â–µ–Ω"
    fi
    
    # Web (Python —Å–µ—Ä–≤–µ—Ä –¥–ª—è dist)
    if ! curl -s http://localhost:3001 > /dev/null 2>&1; then
        cd /root/mirai-agent
        source /root/mirai-agent/venv/bin/activate
        nohup python3 web_server.py > /root/mirai-agent/logs/web_server_output.log 2>&1 &
        sleep 5
        log "üåê Web –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∑–∞–ø—É—â–µ–Ω"
    fi
    
    # –ê–≤—Ç–æ–Ω–æ–º–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞
    start_autonomous
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    sleep 10
    check_ecosystem_status
    
    log "üéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
}

# –ü–æ–ª–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã
shutdown_ecosystem() {
    log "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã..."
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ–Ω–æ–º–Ω—É—é —Å–∏—Å—Ç–µ–º—É
    stop_autonomous
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º API
    pkill -f "mirai_ecosystem_api.py" || true
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Web
    pkill -f "npm.*start" || true
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    docker stop $(docker ps -q) 2>/dev/null || true
    
    log "‚úÖ –≠–∫–æ—Å–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
update_system() {
    log "üì• –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
    stop_autonomous
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥ (–µ—Å–ª–∏ –≤ git)
    if [ -d ".git" ]; then
        git pull origin main || log "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–¥"
    fi
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    pip install -r requirements.txt || true
    
    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º
    restart_autonomous
    
    log "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
}

# –°–æ–∑–¥–∞–Ω–∏–µ backup
create_backup() {
    log "üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏..."
    
    local backup_dir="/root/mirai-agent/backups"
    local date_stamp=$(date +%Y%m%d_%H%M%S)
    local backup_file="$backup_dir/mirai_backup_$date_stamp.tar.gz"
    
    mkdir -p "$backup_dir"
    
    # –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤
    tar -czf "$backup_file" \
        --exclude='logs/*' \
        --exclude='backups/*' \
        --exclude='node_modules/*' \
        --exclude='__pycache__/*' \
        /root/mirai-agent/
    
    log "‚úÖ Backup —Å–æ–∑–¥–∞–Ω: $backup_file"
}

# –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏
show_logs() {
    local service="${1:-autonomous}"
    
    case $service in
        "autonomous")
            tail -f /root/mirai-agent/logs/autonomous.log 2>/dev/null || echo "–õ–æ–≥ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
            ;;
        "api")
            tail -f /root/mirai-agent/logs/api_output.log 2>/dev/null || echo "–õ–æ–≥ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
            ;;
        "web")
            tail -f /root/mirai-agent/logs/web_output.log 2>/dev/null || echo "–õ–æ–≥ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
            ;;
        "controller")
            tail -f /root/mirai-agent/logs/controller.log 2>/dev/null || echo "–õ–æ–≥ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
            ;;
        *)
            echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –ª–æ–≥–∏: autonomous, api, web, controller"
            ;;
    esac
}

# –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
show_help() {
    echo "Mirai Autonomous Controller"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–ö–û–ú–ê–ù–î–ê]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  start                –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–≤—Ç–æ–Ω–æ–º–Ω—É—é —Å–∏—Å—Ç–µ–º—É"
    echo "  stop                 –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ–Ω–æ–º–Ω—É—é —Å–∏—Å—Ç–µ–º—É"
    echo "  restart              –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∞–≤—Ç–æ–Ω–æ–º–Ω—É—é —Å–∏—Å—Ç–µ–º—É"
    echo "  status               –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã"
    echo "  init                 –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—Å—é —ç–∫–æ—Å–∏—Å—Ç–µ–º—É"
    echo "  shutdown             –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —ç–∫–æ—Å–∏—Å—Ç–µ–º—É"
    echo "  update               –û–±–Ω–æ–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º—É"
    echo "  backup               –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é"
    echo "  logs [service]       –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ (autonomous/api/web/controller)"
    echo "  help                 –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    local command="${1:-status}"
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤
    mkdir -p /root/mirai-agent/logs
    
    case $command in
        "start")
            start_autonomous
            ;;
        "stop")
            stop_autonomous
            ;;
        "restart")
            restart_autonomous
            ;;
        "status")
            check_ecosystem_status
            ;;
        "init")
            init_ecosystem
            ;;
        "shutdown")
            shutdown_ecosystem
            ;;
        "update")
            update_system
            ;;
        "backup")
            create_backup
            ;;
        "logs")
            show_logs "$2"
            ;;
        "help"|"-h"|"--help")
            show_help
            ;;
        *)
            echo "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $command"
            show_help
            exit 1
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫
main "$@"