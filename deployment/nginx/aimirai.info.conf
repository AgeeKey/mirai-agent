# Nginx configuration for aimirai.info - Online Services Platform
# SSL termination, service management, and public access

# Rate limiting for services
limit_req_zone $binary_remote_addr zone=services_api:10m rate=20r/s;
limit_req_zone $binary_remote_addr zone=services_web:10m rate=50r/s;
limit_req_zone $binary_remote_addr zone=public_access:10m rate=100r/s;

# Upstream services for aimirai.info
upstream mirai_services_api {
    server mirai-services:8080 max_fails=3 fail_timeout=30s;
    server mirai-services-backup:8080 backup max_fails=3 fail_timeout=30s;
}

upstream mirai_services_web {
    server mirai-services-web:3001 max_fails=3 fail_timeout=30s;
    server mirai-services-web-backup:3001 backup max_fails=3 fail_timeout=30s;
}

upstream mirai_ai_services {
    server mirai-ai-gateway:8090 max_fails=3 fail_timeout=30s;
}

# SSL redirect for aimirai.info
server {
    listen 80;
    server_name aimirai.info www.aimirai.info;
    
    # ACME challenge for Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect all HTTP to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Main SSL server for aimirai.info - Online Services
server {
    listen 443 ssl http2;
    server_name aimirai.info www.aimirai.info;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/aimirai.info/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/aimirai.info/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:ServicesSSL:50m;
    ssl_session_tickets off;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # HSTS
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    
    # Security headers for services platform
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' https: wss: ws:; font-src 'self' https:; object-src 'none'; base-uri 'self'; frame-src 'self' https:;" always;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    
    # Client settings for services
    client_max_body_size 50M;
    client_body_timeout 120s;
    client_header_timeout 60s;
    
    # Main landing page
    location = / {
        limit_req zone=public_access burst=100 nodelay;
        
        proxy_pass http://mirai_services_web/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Service-Platform "aimirai.info";
    }
    
    # AI Services API
    location /ai/ {
        limit_req zone=services_api burst=50 nodelay;
        
        proxy_pass http://mirai_ai_services/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Service-Platform "aimirai.info";
        
        # AI service timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
        
        # CORS headers for AI services
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type "text/plain charset=UTF-8";
            add_header Content-Length 0;
            return 204;
        }
    }
    
    # Analytics and Portfolio Services
    location /analytics/ {
        limit_req zone=services_api burst=30 nodelay;
        
        proxy_pass http://mirai_services_api/analytics/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Market Data Services
    location /market/ {
        limit_req zone=services_api burst=100 nodelay;
        
        proxy_pass http://mirai_services_api/market/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache market data
        proxy_cache market_cache;
        proxy_cache_valid 200 1m;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        add_header X-Cache-Status $upstream_cache_status;
    }
    
    # Public API for services
    location /api/ {
        limit_req zone=services_api burst=40 nodelay;
        
        proxy_pass http://mirai_services_api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Service-Platform "aimirai.info";
        
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Enable buffering
        proxy_buffering on;
        proxy_buffer_size 8k;
        proxy_buffers 16 8k;
    }
    
    # Documentation and help
    location /docs/ {
        limit_req zone=services_web burst=20 nodelay;
        
        proxy_pass http://mirai_services_web/docs/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache documentation
        expires 1h;
        add_header Cache-Control "public, max-age=3600";
    }
    
    # Service status and health
    location /status {
        limit_req zone=public_access burst=20 nodelay;
        
        proxy_pass http://mirai_services_api/status;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # No cache for status
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }
    
    # WebSocket for real-time services
    location /ws-services {
        limit_req zone=services_api burst=20 nodelay;
        
        proxy_pass http://mirai_services_api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket timeouts
        proxy_connect_timeout 7s;
        proxy_send_timeout 600s;
        proxy_read_timeout 600s;
        proxy_buffering off;
    }
    
    # Static files and assets
    location / {
        limit_req zone=services_web burst=100 nodelay;
        
        proxy_pass http://mirai_services_web;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|pdf)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            proxy_pass http://mirai_services_web;
        }
        
        # Cache HTML for short time
        location ~* \.html$ {
            expires 10m;
            add_header Cache-Control "public, max-age=600";
            proxy_pass http://mirai_services_web;
        }
    }
    
    # Block sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ \.(yml|yaml|json|env|log)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# Cache zone for market data
proxy_cache_path /var/cache/nginx/market levels=1:2 keys_zone=market_cache:10m max_size=100m inactive=60m use_temp_path=off;