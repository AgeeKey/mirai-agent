#!/bin/bash
# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ü–û–õ–ù–û–ô –ü–†–û–î–ê–ö–®–ù-–ì–û–¢–û–í–ù–û–°–¢–ò Mirai Agent

echo "======================================================="
echo "   üöÄ MIRAI AGENT - –ü–û–õ–ù–ê–Ø –ü–†–û–î–ê–ö–®–ù-–ì–û–¢–û–í–ù–û–°–¢–¨     "
echo "======================================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m'

# –°—á–µ—Ç—á–∏–∫–∏
TOTAL_TESTS=0
PASSED_TESTS=0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤
run_test() {
    local test_name="$1"
    local test_command="$2"
    
    echo -e "${BLUE}üß™ Testing ${test_name}...${NC}"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))
    
    if eval "$test_command" > /dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ PASS${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))
        return 0
    else
        echo -e "${RED}‚ùå FAIL${NC}"
        return 1
    fi
}

echo -e "\n${PURPLE}üîê SSL & SECURITY${NC}"
echo "================================"
run_test "SSL Certificates" "[ -f '/etc/letsencrypt/live/aimirai.info-0001/fullchain.pem' ]"
run_test "SSL Auto-renewal" "systemctl is-enabled certbot.timer"
run_test "HTTPS Nginx Config" "grep -q 'ssl_certificate' /root/mirai-agent/nginx/aimirai.online.conf"

echo -e "\n${CYAN}üåê WEB INTERFACE${NC}"
echo "================================"
run_test "Web Frontend Running" "curl -s http://localhost:3000 | grep -q 'Mirai Agent'"
run_test "Next.js Process" "pgrep -f 'next' > /dev/null"
run_test "Web Logs Available" "[ -f '/root/mirai-agent/logs/web-interface.log' ]"

echo -e "\n${YELLOW}üí∞ LIVE TRADING CONFIG${NC}"
echo "================================"
run_test "Live Trading Enabled" "grep -q 'BINANCE_TESTNET=false' /root/mirai-agent/.env"
run_test "Sandbox Mode Disabled" "grep -q 'AGENT_SANDBOX_MODE=false' /root/mirai-agent/.env"
run_test "Production Trading Mode" "grep -q 'TRADING_MODE=production' /root/mirai-agent/.env"
run_test "Real Binance Keys" "grep -q 'BINANCE_API_KEY=W0ygNMoQl1049jhJLsPw8fIFRrDegEkdxY8Vh95l5Ctpd5I8edGWa2LWfB9mPjo7' /root/mirai-agent/.env"

echo -e "\n${PURPLE}ü§ñ AI SYSTEM${NC}"
echo "================================"
run_test "AI Orchestrator" "curl -s http://localhost:8080/health | grep -q 'healthy'"
run_test "AI Task Processing" "curl -s -X POST http://localhost:8080/task/submit -H 'Content-Type: application/json' -d '{\"type\":\"trading\",\"goal\":\"Test live trading\",\"priority\":9}' | grep -q 'task_id'"
run_test "AI Reports Generated" "[ -d '/root/mirai-agent/shared/reports' ] && [ \$(ls -1 /root/mirai-agent/shared/reports/ | wc -l) -gt 0 ]"

echo -e "\n${CYAN}üöÄ TRADING SYSTEM${NC}"
echo "================================"
run_test "Trading API Online" "curl -s http://localhost:8001/docs | grep -q 'Mirai Trading'"
run_test "Trading API Process" "pgrep -f 'mirai_api' > /dev/null"
run_test "Live API Endpoints" "curl -s http://localhost:8001/openapi.json | grep -q 'openapi'"

echo -e "\n${PURPLE}üåê DOMAINS & NETWORKING${NC}"
echo "================================"
run_test "Nginx Running" "systemctl is-active nginx > /dev/null"
run_test "Domain Configs" "[ -f '/root/mirai-agent/nginx/aimirai.online.conf' ] && [ -f '/root/mirai-agent/nginx/aimirai.info.conf' ]"
run_test "Port 80 Listening" "netstat -tuln | grep -q ':80'"
run_test "Port 443 Listening" "netstat -tuln | grep -q ':443'"

echo -e "\n${YELLOW}üìä MONITORING & LOGS${NC}"
echo "================================"
run_test "Orchestrator Logs" "[ -f '/root/mirai-agent/logs/orchestrator.log' ]"
run_test "Trading API Logs" "[ -f '/root/mirai-agent/logs/trading-api.log' ]"
run_test "Web Interface Logs" "[ -f '/root/mirai-agent/logs/web-interface.log' ]"
run_test "Log Rotation" "[ -d '/root/mirai-agent/logs' ] && find /root/mirai-agent/logs -name '*.log' | wc -l | grep -q '[0-9]'"

echo -e "\n${CYAN}‚ö° 24/7 AUTONOMY${NC}"
echo "================================"
run_test "Background Processes" "pgrep -f 'main.py' > /dev/null && pgrep -f 'mirai_api' > /dev/null && pgrep -f 'next' > /dev/null"
run_test "Auto-restart Capability" "systemctl is-enabled nginx > /dev/null"
run_test "AI Task Queue" "curl -s http://localhost:8080/tasks/active | grep -q 'task'"
run_test "System Resources OK" "[ \$(free | grep Mem | awk '{print (\$3/\$2)*100}' | cut -d. -f1) -lt 85 ]"

# –§–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
echo ""
echo "======================================================="
echo "   üèÜ –ò–¢–û–ì–û–í–ê–Ø –ü–†–û–î–ê–ö–®–ù-–ì–û–¢–û–í–ù–û–°–¢–¨                  "
echo "======================================================="
echo -e "Tests Passed: ${GREEN}${PASSED_TESTS}/${TOTAL_TESTS}${NC}"

if [ $PASSED_TESTS -eq $TOTAL_TESTS ]; then
    SUCCESS_RATE=100
    echo -e "Success Rate: ${GREEN}${SUCCESS_RATE}%${NC}"
    echo ""
    echo -e "${GREEN}üéâ –°–ò–°–¢–ï–ú–ê –ü–û–õ–ù–û–°–¢–¨–Æ –ì–û–¢–û–í–ê –ö –ü–†–û–î–ê–ö–®–ï–ù–£!${NC}"
    echo -e "${GREEN}‚úÖ Live —Ç–æ—Ä–≥–æ–≤–ª—è –∞–∫—Ç–∏–≤–Ω–∞${NC}"
    echo -e "${GREEN}‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã${NC}"
    echo -e "${GREEN}‚úÖ –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
    echo -e "${GREEN}‚úÖ AI —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–Ω–æ–º–Ω–∞${NC}"
    echo -e "${GREEN}‚úÖ –î–æ–º–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã${NC}"
    
    echo ""
    echo -e "${BLUE}üîó –ü–†–û–î–ê–ö–®–ù –°–ï–†–í–ò–°–´:${NC}"
    echo "  üåê HTTPS: https://aimirai.online"
    echo "  üåê Studio: https://aimirai.info"
    echo "  ü§ñ AI API: http://localhost:8080"
    echo "  üí∞ Trading: http://localhost:8001/docs"
    echo "  üé® Web UI: http://localhost:3000"
    
    echo ""
    echo -e "${PURPLE}‚ö†Ô∏è  LIVE TRADING –ê–ö–¢–ò–í–ù–ê!${NC}"
    echo "  üí∞ Binance Mainnet: ENABLED"
    echo "  üö´ Testnet: DISABLED"
    echo "  ü§ñ AI Decisions: AUTONOMOUS"
    echo "  üí∏ Real Money: AT RISK"
    
    echo ""
    echo -e "${YELLOW}üìù –ú–û–ù–ò–¢–û–†–ò–ù–ì:${NC}"
    echo "  üìä Logs: /root/mirai-agent/logs/"
    echo "  üìà Reports: /root/mirai-agent/shared/reports/"
    echo "  üîç Health: http://localhost:8080/health"
    echo "  üì± Status: http://localhost:8080/status"
    
    echo ""
    echo -e "${CYAN}üöÄ –ê–í–¢–û–ù–û–ú–ù–´–ï –ü–†–û–¶–ï–°–°–´:${NC}"
    ps aux | grep -E "(main.py|mirai_api|next|nginx)" | grep -v grep | head -4
    
else
    SUCCESS_RATE=$((PASSED_TESTS * 100 / TOTAL_TESTS))
    echo -e "Success Rate: ${YELLOW}${SUCCESS_RATE}%${NC}"
    echo ""
    echo -e "${YELLOW}‚ö†Ô∏è  –°–ò–°–¢–ï–ú–ê –¢–†–ï–ë–£–ï–¢ –î–û–†–ê–ë–û–¢–ö–ò${NC}"
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–µ—É–¥–∞—á–Ω—ã–µ —Ç–µ—Å—Ç—ã –≤—ã—à–µ"
fi

echo ""
echo "======================================================="
echo "         –ü–†–û–î–ê–ö–®–ù-–ü–†–û–í–ï–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê                 "
echo "======================================================="