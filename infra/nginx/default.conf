# Mirai Agent Nginx Configuration for Docker

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=dashboard:10m rate=30r/s;

# Upstream servers (placeholder for when services are added)
# upstream mirai_api {
#     server mirai-api:8000 max_fails=3 fail_timeout=30s;
# }

# upstream mirai_dashboard {
#     server mirai-dashboard:3000 max_fails=3 fail_timeout=30s;
# }

# Default server for health checks
server {
    listen 80 default_server;
    server_name _;
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 'Mirai Agent Infrastructure is running\n';
        add_header Content-Type text/plain;
    }
    
    # Grafana proxy
    location /grafana/ {
        proxy_pass http://mirai-grafana:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Prometheus proxy
    location /prometheus/ {
        proxy_pass http://mirai-prometheus:9090/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Default location
    location / {
        return 200 'Mirai Agent Infrastructure\nServices available:\n- /health - Health check\n- /grafana/ - Grafana dashboard\n- /prometheus/ - Prometheus metrics\n';
        add_header Content-Type text/plain;
    }
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
}