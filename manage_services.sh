#!/bin/bash

# üöÄ Mirai Agent - Services Management Script
# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã

set -e

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m' # No Color

print_banner() {
    echo -e "${PURPLE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${PURPLE}‚ïë${NC}                    ${BLUE}ü§ñ MIRAI SERVICES MANAGER${NC}                    ${PURPLE}‚ïë${NC}"
    echo -e "${PURPLE}‚ïë${NC}              ${GREEN}–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π${NC}                 ${PURPLE}‚ïë${NC}"
    echo -e "${PURPLE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo ""
}

print_status() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

check_service() {
    local service_name="$1"
    local port="$2"
    
    if curl -s "http://localhost:$port" > /dev/null 2>&1; then
        print_status "$service_name –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É $port"
        return 0
    else
        print_warning "$service_name –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É $port"
        return 1
    fi
}

start_api() {
    print_info "–ó–∞–ø—É—Å–∫ FastAPI —Å–µ—Ä–≤–µ—Ä–∞..."
    cd /root/mirai-agent/app/api
    export $(cat ../../.env | grep -v '^#' | xargs)
    nohup uvicorn mirai_api.main:app --host 0.0.0.0 --port 8000 --reload > ../../logs/api.log 2>&1 &
    API_PID=$!
    sleep 3
    
    if check_service "FastAPI" "8000"; then
        echo $API_PID > /tmp/mirai_api.pid
        print_status "FastAPI –∑–∞–ø—É—â–µ–Ω (PID: $API_PID)"
    else
        print_error "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ FastAPI"
        return 1
    fi
}

start_web() {
    print_info "–ó–∞–ø—É—Å–∫ Next.js –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞..."
    cd /root/mirai-agent/web/services
    export $(cat ../../.env | grep -v '^#' | xargs)
    nohup npm run dev > ../../logs/web.log 2>&1 &
    WEB_PID=$!
    sleep 5
    
    if check_service "Next.js" "3000"; then
        echo $WEB_PID > /tmp/mirai_web.pid
        print_status "Next.js –∑–∞–ø—É—â–µ–Ω (PID: $WEB_PID)"
    else
        print_error "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Next.js"
        return 1
    fi
}

start_agent() {
    print_info "–ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞..."
    cd /root/mirai-agent
    export $(cat .env | grep -v '^#' | xargs)
    nohup python3 app/agent/run_agent.py --objective "continuous market monitoring" --continuous > logs/agent.log 2>&1 &
    AGENT_PID=$!
    echo $AGENT_PID > /tmp/mirai_agent.pid
    print_status "–ê–≥–µ–Ω—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–µ (PID: $AGENT_PID)"
}

stop_services() {
    print_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ PID —Ñ–∞–π–ª–∞–º
    for service in api web agent; do
        if [ -f "/tmp/mirai_$service.pid" ]; then
            PID=$(cat /tmp/mirai_$service.pid)
            if kill -0 $PID 2>/dev/null; then
                kill $PID
                print_status "–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω $service (PID: $PID)"
            fi
            rm -f /tmp/mirai_$service.pid
        fi
    done
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
    pkill -f "uvicorn.*mirai_api" || true
    pkill -f "npm run dev" || true
    pkill -f "run_agent.py" || true
    
    print_status "–í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

check_status() {
    print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ API
    if check_service "FastAPI API" "8000"; then
        echo "  üìç –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    if check_service "Next.js Web" "3000"; then
        echo "  üìç –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:3000"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≥–µ–Ω—Ç–∞
    if pgrep -f "run_agent.py" > /dev/null; then
        print_status "–ê–≤—Ç–æ–Ω–æ–º–Ω—ã–π –∞–≥–µ–Ω—Ç –∞–∫—Ç–∏–≤–µ–Ω"
        echo "  üìç –õ–æ–≥–∏: tail -f /root/mirai-agent/logs/agent.log"
    else
        print_warning "–ê–≤—Ç–æ–Ω–æ–º–Ω—ã–π –∞–≥–µ–Ω—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    fi
    
    echo ""
    echo "üìä –ü—Ä–æ—Ü–µ—Å—Å—ã:"
    ps aux | grep -E "(uvicorn|npm|run_agent)" | grep -v grep || echo "  –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
}

show_logs() {
    print_info "–í—ã–±–µ—Ä–∏—Ç–µ –ª–æ–≥–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:"
    echo "1. API –ª–æ–≥–∏"
    echo "2. Web –ª–æ–≥–∏" 
    echo "3. Agent –ª–æ–≥–∏"
    echo "4. –í—Å–µ –ª–æ–≥–∏"
    
    read -p "–í—ã–±–æ—Ä (1-4): " choice
    
    case $choice in
        1) tail -f /root/mirai-agent/logs/api.log ;;
        2) tail -f /root/mirai-agent/logs/web.log ;;
        3) tail -f /root/mirai-agent/logs/agent.log ;;
        4) tail -f /root/mirai-agent/logs/*.log ;;
        *) print_error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä" ;;
    esac
}

restart_services() {
    print_info "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
    stop_services
    sleep 2
    start_all
}

start_all() {
    print_info "–ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã Mirai..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –ª–æ–≥–æ–≤
    mkdir -p /root/mirai-agent/logs
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if [ ! -f "/root/mirai-agent/.env" ]; then
        print_error "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫—É."
        exit 1
    fi
    
    start_api
    start_web
    
    echo ""
    print_status "üéâ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!"
    echo ""
    echo "üåê –î–æ—Å—Ç—É–ø–Ω—ã–µ –∞–¥—Ä–µ—Å–∞:"
    echo "  üìä API + Docs: http://localhost:8000/docs"
    echo "  üéÆ Web UI:     http://localhost:3000"
    echo ""
    echo "ü§ñ –î–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–≥–µ–Ω—Ç–∞:"
    echo "  ./start_agent.sh –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é 6"
}

main_menu() {
    while true; do
        print_banner
        
        echo "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        echo "1. üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
        echo "2. ‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
        echo "3. üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã"
        echo "4. üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å"
        echo "5. üìã –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
        echo "6. ü§ñ –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–≥–µ–Ω—Ç–∞"
        echo "7. üö™ –í—ã—Ö–æ–¥"
        echo ""
        
        read -p "–í–∞—à –≤—ã–±–æ—Ä (1-7): " choice
        
        case $choice in
            1) start_all ;;
            2) stop_services ;;
            3) restart_services ;;
            4) check_status ;;
            5) show_logs ;;
            6) start_agent ;;
            7) print_info "–í—ã—Ö–æ–¥..."; exit 0 ;;
            *) print_error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞." ;;
        esac
        
        echo ""
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
        clear
    done
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
case "${1:-menu}" in
    "start") start_all ;;
    "stop") stop_services ;;
    "restart") restart_services ;;
    "status") check_status ;;
    "logs") show_logs ;;
    "agent") start_agent ;;
    "menu"|*) main_menu ;;
esac