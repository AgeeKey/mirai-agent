version: '3.8'

networks:
  mirai-network:
    driver: bridge

services:
  # Infrastructure services
  redis:
    image: redis:7-alpine
    container_name: mirai-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-miraipass}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-miraipass}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mirai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Advanced AI Engine
  ai-engine:
    build:
      context: ./microservices
      dockerfile: Dockerfile
    container_name: mirai-ai-engine
    command: ["python", "-m", "uvicorn", "ai_engine:app", "--host", "0.0.0.0", "--port", "8001"]
    ports:
      - "8001:8001"
    environment:
      - ENVIRONMENT=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-miraipass}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - HF_TOKEN=${HF_TOKEN}
    depends_on:
      - redis
    networks:
      - mirai-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
      - ./reports:/app/reports
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Advanced Portfolio Manager
  portfolio-manager:
    build:
      context: ./microservices
      dockerfile: Dockerfile
    container_name: mirai-portfolio-manager
    command: ["python", "-m", "uvicorn", "portfolio_manager:app", "--host", "0.0.0.0", "--port", "8002"]
    ports:
      - "8002:8002"
    environment:
      - ENVIRONMENT=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-miraipass}
    depends_on:
      - redis
      - ai-engine
    networks:
      - mirai-network
    restart: unless-stopped
    volumes:
      - ./state:/app/state
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Advanced Analytics Engine
  analytics:
    build:
      context: ./microservices
      dockerfile: Dockerfile
    container_name: mirai-analytics
    command: ["python", "-m", "uvicorn", "analytics:app", "--host", "0.0.0.0", "--port", "8003"]
    ports:
      - "8003:8003"
    environment:
      - ENVIRONMENT=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-miraipass}
    depends_on:
      - redis
      - ai-engine
    depends_on:
      - redis
    networks:
      - mirai-network
    restart: unless-stopped

  strategy-engine:
    build:
      context: ./microservices
      dockerfile: Dockerfile
    container_name: mirai-strategy-engine
    command: ["uvicorn", "strategy_engine:app", "--host", "0.0.0.0", "--port", "8002"]
    ports:
      - "8002:8002"
    environment:
      - ENVIRONMENT=production
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      - redis
      - data-collector
    networks:
      - mirai-network
    restart: unless-stopped

  risk-engine:
    build:
      context: ./microservices
      dockerfile: Dockerfile
    container_name: mirai-risk-engine
    command: ["uvicorn", "risk_engine:app", "--host", "0.0.0.0", "--port", "8003"]
    ports:
      - "8003:8003"
    environment:
      - ENVIRONMENT=production
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      - redis
    networks:
      - mirai-network
    restart: unless-stopped

  analytics:
    build:
      context: ./microservices
      dockerfile: Dockerfile
    container_name: mirai-analytics
    command: ["uvicorn", "analytics:app", "--host", "0.0.0.0", "--port", "8004"]
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=production
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      - redis
    networks:
      - mirai-network
    restart: unless-stopped

  notifications:
    build:
      context: ./microservices
      dockerfile: Dockerfile
    container_name: mirai-notifications
    command: ["uvicorn", "notifications:app", "--host", "0.0.0.0", "--port", "8005"]
    ports:
      - "8005:8005"
    environment:
      - ENVIRONMENT=production
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      - redis
    networks:
      - mirai-network
    restart: unless-stopped

  portfolio-manager:
    build:
      context: ./microservices
      dockerfile: Dockerfile
    container_name: mirai-portfolio-manager
    command: ["uvicorn", "portfolio_manager:app", "--host", "0.0.0.0", "--port", "8006"]
    ports:
      - "8006:8006"
    environment:
      - ENVIRONMENT=production
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      - redis
    networks:
      - mirai-network
    restart: unless-stopped

  ai-engine:
    build:
      context: ./microservices
      dockerfile: Dockerfile
    container_name: mirai-ai-engine
    command: ["uvicorn", "ai_engine:app", "--host", "0.0.0.0", "--port", "8007"]
    ports:
      - "8007:8007"
    environment:
      - ENVIRONMENT=production
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      - redis
    networks:
      - mirai-network
    restart: unless-stopped
