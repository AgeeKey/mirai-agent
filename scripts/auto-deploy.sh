#!/bin/bash

# Mirai Ecosystem Auto-Deploy Script
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤

set -e

echo "üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã Mirai"

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
check_requirements() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π..."
    
    if ! command -v docker &> /dev/null; then
        log "‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
    
    if ! command -v node &> /dev/null; then
        log "‚ùå Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
    
    log "‚úÖ –í—Å–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã"
}

# –°–±–æ—Ä–∫–∞ backend
build_backend() {
    log "üèóÔ∏è –°–±–æ—Ä–∫–∞ backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    
    cd /root/mirai-agent
    docker build -t mirai-ecosystem:latest -f Dockerfile.ecosystem .
    
    log "‚úÖ Backend —Å–æ–±—Ä–∞–Ω"
}

# –°–±–æ—Ä–∫–∞ frontend
build_frontend() {
    log "üé® –°–±–æ—Ä–∫–∞ frontend..."
    
    cd /root/mirai-agent/frontend/trading
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    if [ ! -d "node_modules" ]; then
        log "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
        npm install
    fi
    
    # –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–¥–∞–∫—à–Ω –≤–µ—Ä—Å–∏—é
    npm run build
    
    log "‚úÖ Frontend —Å–æ–±—Ä–∞–Ω"
}

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
start_services() {
    log "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Ç–∏ –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    docker network create mirai-ecosystem || true
    mkdir -p /root/mirai-agent/deployment/data/{trading,services,postgres,redis}
    chmod -R 777 /root/mirai-agent/deployment/data
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    docker stop mirai-trading-ecosystem mirai-services-ecosystem mirai-nginx-simple mirai-postgres mirai-redis 2>/dev/null || true
    docker rm mirai-trading-ecosystem mirai-services-ecosystem mirai-nginx-simple mirai-postgres mirai-redis 2>/dev/null || true
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    docker run -d --name mirai-postgres \
        --network mirai-ecosystem \
        -e POSTGRES_DB=mirai_production \
        -e POSTGRES_USER=mirai \
        -e POSTGRES_PASSWORD=mirai_secure_pass_2024 \
        -v /root/mirai-agent/deployment/data/postgres:/var/lib/postgresql/data \
        postgres:15-alpine
    
    docker run -d --name mirai-redis \
        --network mirai-ecosystem \
        -v /root/mirai-agent/deployment/data/redis:/data \
        redis:7-alpine redis-server --appendonly yes --requirepass redis_secure_pass_2024
    
    # –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑
    sleep 20
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    docker run -d --name mirai-trading-ecosystem \
        --network mirai-ecosystem \
        -p 8001:8000 \
        -e SERVICE_TYPE=trading \
        -e DOMAIN=aimirai.online \
        -e DRY_RUN=false \
        -v /root/mirai-agent/deployment/data/trading:/app/state \
        -v /root/mirai-agent/deployment/logs:/app/logs \
        mirai-ecosystem:latest
    
    docker run -d --name mirai-services-ecosystem \
        --network mirai-ecosystem \
        -p 8002:8000 \
        -e SERVICE_TYPE=services \
        -e DOMAIN=aimirai.info \
        -e DRY_RUN=false \
        -v /root/mirai-agent/deployment/data/services:/app/state \
        -v /root/mirai-agent/deployment/logs:/app/logs \
        mirai-ecosystem:latest
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º nginx
    docker run -d --name mirai-nginx-ecosystem \
        --network host \
        -v /root/mirai-agent/deployment/nginx-working.conf:/etc/nginx/nginx.conf:ro \
        nginx:alpine
    
    log "‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"
}

# –ó–∞–ø—É—Å–∫ frontend dev server
start_frontend_dev() {
    log "üéØ –ó–∞–ø—É—Å–∫ frontend dev server..."
    
    cd /root/mirai-agent/frontend/trading
    nohup npm run dev > /root/mirai-agent/deployment/logs/frontend.log 2>&1 &
    
    log "‚úÖ Frontend dev server –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3001"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
check_status() {
    log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    sleep 30
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    echo "–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API
    echo -e "\n–ü—Ä–æ–≤–µ—Ä–∫–∞ API:"
    if curl -s http://localhost:8001/healthz >/dev/null; then
        echo "‚úÖ Trading API: —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        echo "‚ùå Trading API: –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    fi
    
    if curl -s http://localhost:8002/healthz >/dev/null; then
        echo "‚úÖ Services API: —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        echo "‚ùå Services API: –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º frontend
    if curl -s http://localhost:3001 >/dev/null; then
        echo "‚úÖ Frontend: —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        echo "‚ùå Frontend: –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
setup_monitoring() {
    log "üìä –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
    
    # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    cat > /root/mirai-agent/scripts/monitor.sh << 'EOF'
#!/bin/bash

while true; do
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] Checking services..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    docker ps --format "{{.Names}}" | grep -E "mirai-.*-ecosystem|mirai-postgres|mirai-redis" | while read container; do
        if docker ps | grep -q $container; then
            echo "‚úÖ $container: running"
        else
            echo "‚ùå $container: stopped - restarting..."
            docker restart $container
        fi
    done
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API endpoints
    for port in 8001 8002 3001; do
        if curl -s http://localhost:$port/healthz >/dev/null 2>&1 || curl -s http://localhost:$port >/dev/null 2>&1; then
            echo "‚úÖ Port $port: responding"
        else
            echo "‚ùå Port $port: not responding"
        fi
    done
    
    sleep 300  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
done
EOF
    
    chmod +x /root/mirai-agent/scripts/monitor.sh
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ñ–æ–Ω–µ
    nohup /root/mirai-agent/scripts/monitor.sh > /root/mirai-agent/deployment/logs/monitor.log 2>&1 &
    
    log "‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    check_requirements
    build_backend
    build_frontend
    start_services
    start_frontend_dev
    setup_monitoring
    check_status
    
    log "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
    log ""
    log "–î–æ—Å—Ç—É–ø–Ω—ã–µ URL:"
    log "- Trading Platform: http://aimirai.online (—á–µ—Ä–µ–∑ nginx)"
    log "- Services Platform: http://aimirai.info (—á–µ—Ä–µ–∑ nginx)"
    log "- Trading API: http://localhost:8001"
    log "- Services API: http://localhost:8002"
    log "- Trading Frontend: http://localhost:3001"
    log ""
    log "–õ–æ–≥–∏:"
    log "- Backend: docker logs mirai-trading-ecosystem"
    log "- Frontend: tail -f /root/mirai-agent/deployment/logs/frontend.log"
    log "- Monitor: tail -f /root/mirai-agent/deployment/logs/monitor.log"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
case "${1:-deploy}" in
    "deploy")
        main
        ;;
    "status")
        check_status
        ;;
    "restart")
        log "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
        start_services
        start_frontend_dev
        check_status
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [deploy|status|restart]"
        exit 1
        ;;
esac