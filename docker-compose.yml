version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: mirai-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mirai_agent}
      POSTGRES_USER: ${POSTGRES_USER:-mirai_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-mirai_secure_pass_2025}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infra/sql:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - mirai-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-mirai_user} -d ${POSTGRES_DB:-mirai_agent}",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: mirai-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_secure_pass_2025}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mirai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: mirai-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infra/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=15d"
      - "--web.enable-lifecycle"
    networks:
      - mirai-network
    restart: unless-stopped

  # Grafana Analytics
  grafana:
    image: grafana/grafana:latest
    container_name: mirai-grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD:-grafana_secure_2025}
      GF_USERS_ALLOW_SIGN_UP: "false"
    ports:
      - "3001:3000"
    volumes:
      - ./infra/grafana:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    networks:
      - mirai-network
    restart: unless-stopped
    depends_on:
      - prometheus

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: mirai-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infra/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - mirai-network
    restart: unless-stopped
    depends_on:
      - postgres
      - redis

networks:
  mirai-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:
